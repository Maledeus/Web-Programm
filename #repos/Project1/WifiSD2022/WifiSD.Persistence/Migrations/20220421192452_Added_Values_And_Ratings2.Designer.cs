// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WifiSD.Persistence.Repositories.DBContext;

namespace WifiSD.Persistence.Migrations
{
    [DbContext(typeof(MovieDbContext))]
    [Migration("20220421192452_Added_Values_And_Ratings2")]
    partial class Added_Values_And_Ratings2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WifiSD.Core.Entities.Movies.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Horror"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Dramaqueen"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Science Fiction"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Comedy"
                        });
                });

            modelBuilder.Entity("WifiSD.Core.Entities.Movies.MediumType", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.HasKey("Code");

                    b.ToTable("MediumTypes");

                    b.HasData(
                        new
                        {
                            Code = "DVD",
                            Name = "Digital Versitale Disc"
                        },
                        new
                        {
                            Code = "Br",
                            Name = "Blue Ray"
                        },
                        new
                        {
                            Code = "BR-3D",
                            Name = "Blue Ray 3D"
                        },
                        new
                        {
                            Code = "BR-HDR",
                            Name = "Blue Ray High Definition Res."
                        },
                        new
                        {
                            Code = "VHS",
                            Name = "VHS"
                        });
                });

            modelBuilder.Entity("WifiSD.Core.Entities.Movies.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("MediumTypeCode")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("Name")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256)
                        .HasDefaultValue("Unknown");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte>("Rating")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("MediumTypeCode");

                    b.HasIndex("Name")
                        .HasName("IX_Movies_Name");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("63060820-09d0-462a-9c79-33fe570a6c4a"),
                            GenreId = 4,
                            MediumTypeCode = "BR",
                            Name = "Schlimmer gehts immer",
                            Price = 20.99m,
                            Rating = (byte)5,
                            ReleaseDate = new DateTime(2017, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2e5e7441-e295-48f7-ba50-a7cb0f41cf18"),
                            GenreId = 1,
                            MediumTypeCode = "DVD",
                            Name = "Stirb langsam",
                            Price = 7.90m,
                            Rating = (byte)0,
                            ReleaseDate = new DateTime(1988, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ce10e516-a7b4-4763-a617-a3938c2e99db"),
                            GenreId = 3,
                            MediumTypeCode = "BR-3D",
                            Name = "Titanic",
                            Price = 9.90m,
                            Rating = (byte)3,
                            ReleaseDate = new DateTime(1994, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("WifiSD.Core.Entities.Movies.Movie", b =>
                {
                    b.HasOne("WifiSD.Core.Entities.Movies.Genre", "Genre")
                        .WithMany("Movies")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WifiSD.Core.Entities.Movies.MediumType", "MediumType")
                        .WithMany("Movies")
                        .HasForeignKey("MediumTypeCode")
                        .HasConstraintName("FK_Movies_MediumTypes_MediumTypeCode")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
